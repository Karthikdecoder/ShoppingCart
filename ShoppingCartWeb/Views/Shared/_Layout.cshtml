@using Newtonsoft.Json;
@using ShoppingCartWeb.Models.Dto;
@using ShoppingCartWeb.Utililty;
@using Microsoft.AspNetCore.Http;
<!DOCTYPE html>

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpAcc


<html lang="en">


<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    @*<title>AdminLTE 3 | Blank Page</title>*@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">


    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

    <!-- this is for delete popup -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    @*<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"></script>

    <!-- #Table Demo Script -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.css" />
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.js"></script>


    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    @*<link rel="stylesheet" href="../../plugins/fontawesome-free/css/all.min.css">*@
    <!-- Theme style -->
    <link rel="stylesheet" href="../../dist/css/adminlte.min.css">
</head>




@{
    //string currentController = ViewContext.RouteData.Values["controller"]?.ToString();
    //string currentAction = ViewContext.RouteData.Values["action"]?.ToString();

    var Menu = Context.Session.GetString("Menus");

    List<MenuRoleMappingDTO> Menus = JsonConvert.DeserializeObject<List<MenuRoleMappingDTO>>(Menu.ToString());

    var defaultURI = @"https://localhost:7081";


}


<body class="hold-transition sidebar-mini">

    <partial name="_Notification" />

    <!-- Site wrapper -->
    <div class="wrapper">
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-dark navbar-light" style="background-color: darkslategrey;">
            <!-- Left navbar links -->

            <ul class="navbar-nav ml-auto">
                @*<li class="nav-item">
                <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
                </li>*@
                <li class="nav-item d-none d-sm-inline-block">


                <li class="nav-item">
                    <a class="nav-link text-white" asp-controller="User" asp-action="Logout">Logout</a>
                </li>
            </ul>

        </nav>




        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4" style="position:fixed; background-color: darkslategrey;">
            <!-- Brand Logo -->
            <a href="@Url.Action("Index", "Home")" class="brand-link">

                @*<img src="../../dist/img/AdminLTELogo.png" alt="AdminLTE Logo" class="brand-image img-circle elevation-3" style="opacity: .8">*@
                <span class="brand-text justify-content-center" style="display: flex; justify-content: center; align-items: center; font-weight: bold;">Point of Sale</span>
            </a>

            <!-- Sidebar -->
            <div class="sidebar">

                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                        <!-- Add icons to the links using the .nav-icon class
                             with font-awesome or any other icon font library -->
                        <!-- Access the TempData values in your HTML file -->
                        @{
                            string currentController = ViewContext.RouteData.Values["controller"] as string;
                            string currentAction = ViewContext.RouteData.Values["action"] as string;
                        }

                        @foreach (var parentMenu in Menus.Where(menu => menu.Menu.ParentId == 0))
                        {
                            <li class="nav-item @(currentController == parentMenu.Menu.Url ? "menu-open" : "")">

                                <a href="javascript:void(0);" class="nav-link @(currentController == parentMenu.Menu.Url ? "active" : "")">

                                    <i class="fas fa-tree"></i>
                                    <p>
                                        @parentMenu.Menu.MenuName
                                        <i class="fas fa-angle-left right"></i>
                                    </p>
                                </a>

                                <ul class="nav nav-treeview">

                                    @foreach (var childMenu in Menus.Where(menu => menu.Menu.ParentId == parentMenu.MenuId))
                                    {
                                        <li class="nav-item">

                                            <a href="@($"{defaultURI}{childMenu.Menu.Url}" )" class="nav-link @(currentController == childMenu.Menu.Url  ? "active" : "")">
                                                @childMenu.Menu.MenuName
                                            </a>

                                        </li>
                                    }

                                </ul>
                            </li>
                        }


                        @*@foreach (var parentMenu in Menus.Where(menu => menu.Menu.ParentId == 0))
                        {
                        <li class="nav-item @(currentController == parentMenu.Menu.Url ? "menu-open" : "")">
                        <a href="javascript:void(0);" class="nav-link @(currentController == parentMenu.Menu.Url ? "active" : "")">
                        <i class="fas fa-tree"></i>
                        <p>
                        @parentMenu.Menu.MenuName
                        <i class="fas fa-angle-left right"></i>
                        </p>
                        </a>
                        <ul class="nav nav-treeview">
                        @foreach (var childMenu in Menus.Where(menu => menu.Menu.ParentId == parentMenu.MenuId))
                        {
                        <li class="nav-item">
                        <a href="@($"{defaultURI}{childMenu.Menu.Url}")" class="nav-link @(currentController == childMenu.Menu.Url ? "active" : "")">
                        @childMenu.Menu.MenuName
                        </a>
                        </li>
                        }
                        </ul>
                        </li>
                        }
                        *@

                        @* @foreach (var parentMenu in Menus.Where(menu => menu.Menu.ParentId == 0))
                        {
                        var parentMenuUrlParts = parentMenu.Menu.Url.Split('/');
                        if (parentMenuUrlParts.Length >= 3)
                        {
                        string parentController = parentMenuUrlParts[1];
                        string parentAction = parentMenuUrlParts[2];

                        <li class="nav-item @(currentController == parentController || currentAction == parentAction ? "menu-open" : "")">
                        <a href="javascript:void(0);" class="nav-link @(currentController == parentController ? "active" : "")">
                        <i class="fas fa-tree"></i>
                        <p>
                        @parentMenu.Menu.MenuName
                        <i class="fas fa-angle-left right"></i>
                        </p>
                        </a>
                        <ul class="nav nav-treeview">
                        @foreach (var childMenu in Menus.Where(menu => menu.Menu.ParentId == parentMenu.MenuId && menu.Menu.Url.StartsWith($"/{parentController}")))
                        {
                        var childUrlParts = childMenu.Menu.Url.Split('/');
                        if (childUrlParts.Length >= 3)
                        {
                        string childController = childUrlParts[1];
                        string childAction = childUrlParts[2];

                        <li class="nav-item">
                        <a href="@($"{defaultURI}{childMenu.Menu.Url}")" class="nav-link @(currentController == childController || currentAction == childAction ? "active" : "")">
                        @childMenu.Menu.MenuName
                        </a>
                        </li>
                        }
                        }
                        </ul>
                        </li>
                        }
                        }
                        *@


                        @*<li class="nav-item @(currentController == "Registration" || currentController == "User" && (currentAction == "IndexRegistration" || currentAction == "IndexUser"|| currentAction == "CreateRegistration" || currentAction == "UpdateRegistration" || currentAction == "Register" || currentAction == "UpdateUser") ? "menu-open" : "")">

                        <a href="#" class="nav-link @(currentController == "Registration" || currentController == "User" && (currentAction == "IndexRegistration" || currentAction == "IndexUser" || currentAction == "CreateRegistration" || currentAction == "UpdateRegistration" || currentAction == "Register" ||currentAction == "UpdateUser") ? "active" : "")">

                        <i class="nav-icon fas fa-tree"></i>

                        <p>
                        Registrations

                        <i class="fas fa-angle-left right"></i>
                        </p>
                        </a>

                        <ul class="nav nav-treeview">

                        <li class="nav-item">
                        <a class="nav-link @(currentController == "Registration" && (currentAction == "IndexRegistration" || currentAction=="CreateRegistration" || currentAction == "UpdateRegistration" ) ? "active" : "")" asp-controller="Registration" asp-action="IndexRegistration">

                        Person Registration

                        </a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link @(currentController == "User" && (currentAction == "IndexUser" || currentAction == "Register" || currentAction == "UpdateUser") ? "active" : "")" asp-controller="User" asp-action="IndexUser">

                        User Registration
                        </a>

                        </li>


                        </ul>
                        </li>*@

                        @*
                        @if (User.IsInRole("Admin"))
                        {

                        <li class="nav-item @(currentController == "RoleMaster" || currentController == "CategoryMaster" || currentController == "CountryMaster" || currentController == "StateMaster" &&

                        (currentAction == "IndexRoleMaster" || currentAction == "CreateRoleMaster" || currentAction == "UpdateRoleMaster" ||
                        currentAction == "IndexCategoryMaster" || currentAction == "CreateCategoryMaster" || currentAction == "UpdateCategoryMaster" ||
                        currentAction == "IndexCountryMaster" || currentAction == "CreateCountryMaster" || currentAction == "UpdateCountryMaster" ||
                        currentAction == "IndexStateMaster" || currentAction == "CreateStateMaster" || currentAction == "UpdateStateMaster")
                        ? "menu-open" : "")">

                        <a href="#" class="nav-link @(currentController == "RoleMaster" || currentController == "CategoryMaster" || currentController == "CountryMaster" || currentController == "StateMaster" &&

                        (currentAction == "IndexRoleMaster" || currentAction == "CreateRoleMaster" || currentAction == "UpdateRoleMaster" ||
                        currentAction == "IndexCategoryMaster" || currentAction == "CreateCategoryMaster" || currentAction == "UpdateCategoryMaster" ||
                        currentAction == "IndexCountryMaster" || currentAction == "CreateCountryMaster" || currentAction == "UpdateCountryMaster" ||
                        currentAction == "IndexStateMaster" || currentAction == "CreateStateMaster" || currentAction == "UpdateStateMaster") ? "active" : "")">

                        <i class="nav-icon fas fa-tree"></i>
                        <p>
                        Masters
                        <i class="fas fa-angle-left right"></i>
                        </p>
                        </a>

                        <ul class="nav nav-treeview">

                        <li class="nav-item">
                        <a class="nav-link @(currentController == "RoleMaster" && (currentAction == "IndexRoleMaster" || currentAction == "CreateRoleMaster" || currentAction == "UpdateRoleMaster") ? "active" : "")" asp-controller="RoleMaster" asp-action="IndexRoleMaster">
                        Role Master
                        </a>
                        </li>


                        <li class="nav-item">
                        <a class="nav-link @(currentController == "CategoryMaster" && (currentAction == "IndexCategoryMaster" || currentAction == "CreateCategoryMaster" || currentAction == "UpdateCategoryMaster") ? "active" : "")" asp-controller="CategoryMaster" asp-action="IndexCategoryMaster">Category Master</a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link @(currentController == "CountryMaster" && (currentAction == "IndexCountryMaster" || currentAction == "CreateCountryMaster" || currentAction == "UpdateCountryMaster") ? "active" : "")" asp-controller="CountryMaster" asp-action="IndexCountryMaster">Country Master</a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link @(currentController == "StateMaster" && (currentAction == "IndexStateMaster" || currentAction == "CreateStateMaster" || currentAction == "UpdateStateMaster") ? "active" : "")" asp-controller="StateMaster" asp-action="IndexStateMaster">State Master</a>
                        </li>
                        </ul>


                        </li>
                        }

                        <li class="nav-item @(currentController == "Menu" ? "menu-open" : "")">
                        <a href="#" class="nav-link @(currentController == "Menu" ? "active" : "")">
                        <i class="nav-icon fas fa-tree"></i>
                        <p>
                        RBAC
                        <i class="fas fa-angle-left right"></i>
                        </p>
                        </a>
                        <ul class="nav nav-treeview">
                        <li class="nav-item">
                        <a class="nav-link @(currentController == "Menu" && (currentAction == "IndexMenu" || currentAction == "CreateMenu" || currentAction == "UpdateMenu") ? "active" : "")" asp-controller="Menu" asp-action="IndexMenu">
                        Menu
                        </a>
                        </li>
                        </ul>
                        <ul class="nav nav-treeview">
                        <li class="nav-item">
                        <a class="nav-link @(currentController == "Menu" && (currentAction == "IndexMenuRoleMapping" || currentAction == "CreateMenuRoleMapping" || currentAction == "UpdateMenuRoleMapping") ? "active" : "")" asp-controller="MenuRoleMapping" asp-action="IndexMenuRoleMapping">
                        Menu Role Mapping
                        </a>
                        </li>
                        </ul>
                        </li>
                        *@


                    </ul>
                </nav>
                <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>








        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper" style="background-color: gainsboro;">

            <!-- Main content -->
            <section class="content">

                @RenderBody()

            </section>
            <!-- /.content -->

        </div>
        <!-- /.content-wrapper -->

        <footer class="main-footer">
            <strong>Copyright &copy; 2014-2021.</strong> All rights reserved.
        </footer>

        <!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
        </aside>
        <!-- /.control-sidebar -->
    </div>
    <!-- ./wrapper -->
    <!-- jQuery -->@*
    <script src="../../plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="../../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>*@
    <!-- AdminLTE App -->
    <script src="../../dist/js/adminlte.min.js"></script>


    <script>
        $(document).ready(function () {

            // Get the current page's URL
            var currentPageUrl = window.location.href;

            // Extract the controller name from the URL
            var controller = extractController(currentPageUrl);

            if (controller) {
                // Find the active menu item based on the extracted controller
                $(".nav-link").each(function () {
                    var menuItemUrl = $(this).attr("href");

                    // Check if the menuItemUrl contains the controller name
                    if (menuItemUrl.indexOf('/' + controller + '/') !== -1) {
                        // Mark the current menu item as active
                        $(this).addClass("active");

                        // If the link is in a nested menu, mark its parent menu item as active
                        $(this).closest(".nav-treeview").prev(".nav-link").addClass("active");

                        // Open the parent menu if it's in a collapsible menu
                        $(this).closest(".nav-treeview").parent().addClass("menu-open");

                        // Expand all parent menus to keep them open
                        $(this).parentsUntil(".sidebar-menu", ".treeview").addClass("menu-open");
                    }
                });
            }
        });

        function extractController(url) {
            // Split the URL by slashes
            var urlParts = url.split("/");

            // Find the first segment after the domain (controller name)
            var controller = null;
            for (var i = 3; i < urlParts.length; i++) {
                if (urlParts[i] !== "") {
                    controller = urlParts[i];
                    break;
                }
            }

            return controller;
        }


    </script>

    @*<script>
    $(document).ready(function () {
    // Get the current page's URL
    var currentPageUrl = window.location.href;

    // Extract the controller from the URL
    var controller = currentPageUrl.split("/")[3]; // Adjust the index based on your URL structure

    // Find the active menu item based on the extracted controller
    $(".nav-link").each(function () {
    var menuItemUrl = $(this).attr("href");
    if (menuItemUrl.indexOf(controller) !== -1) {
    $(this).addClass("active");

    // If the link is in a nested menu, mark its parent menu item as active
    $(this).closest(".nav-treeview").prev(".nav-link").addClass("active");

    // Open the parent menu if it's in a collapsible menu
    $(this).closest(".nav-treeview").parent().addClass("menu-open");

    // Expand all parent menus to keep them open
    $(this).parentsUntil(".sidebar-menu", ".treeview").addClass("menu-open");
    }
    });
    });

    window.onload = function () {
    window.history.pushState(null, "", location.href);
    window.onpopstate = function () {
    window.history.pushState(null, "", location.href);
    };
    };
    </script>*@


    @*<script>
    $(document).ready(function () {
    // Get the current page's URL
    var currentPageUrl = window.location.href;

    // Find the active menu item based on the current URL
    $(".nav-link").each(function () {
    if (currentPageUrl.indexOf($(this).attr("href")) !== -1) {
    $(this).addClass("active");

    // If the link is in a nested menu, mark its parent menu item as active
    $(this).closest(".nav-treeview").prev(".nav-link").addClass("active");

    // Open the parent menu if it's in a collapsible menu
    $(this).closest(".nav-treeview").parent().addClass("menu-open");

    // Expand all parent menus to keep them open
    $(this).parentsUntil(".sidebar-menu", ".treeview").addClass("menu-open");
    }
    });
    });

    window.onload = function () {
    window.history.pushState(null, "", location.href);
    window.onpopstate = function () {
    window.history.pushState(null, "", location.href);
    };
    };
    </script>*@

    @*
    <script>

    $(document).ready(function () {
    // Get the current page's URL
    var currentPageUrl = window.location.href;

    // Find the active menu item based on the current URL
    $(".nav-link").each(function () {
    if (currentPageUrl.indexOf($(this).attr("href")) !== -1) {
    $(this).addClass("active");

    // If the link is in a nested menu, mark its parent menu item as active
    $(this).closest(".nav-treeview").prev(".nav-link").addClass("active");

    // Open the parent menu if it's in a collapsible menu
    $(this).closest(".nav-treeview").parent().addClass("menu-open");
    }
    });
    });

    window.onload = function () {
    window.history.pushState(null, "", location.href);
    window.onpopstate = function () {
    window.history.pushState(null, "", location.href);
    };
    };


    </script>
    *@

    @*
    <script src="~/AdminLTE/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <script src="~/AdminLTE/dist/js/adminlte.js"></script>
    <script src="~/AdminLTE/dist/js/pages/dashboard.js"></script>
    <script src="~/AdminLTE/dist/js/demo.js"></script>*@

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"></script>

    @*for sweet alert*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    @await RenderSectionAsync("Scripts", required: false)


</body>

</html>
